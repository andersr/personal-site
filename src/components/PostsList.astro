---
import { getCollection } from "astro:content";
import { APP_ICONS } from "~/lib/icons";
import type { BlogPost } from "~/types/BlogPost";
import BulletDivider from "./BulletDivider.astro";
import FormattedDate from "./FormattedDate.astro";
import Icon from "./Icon.astro";

const isProd = import.meta.env.PROD;
const isVercelPreview = process.env.VERCEL_ENV === "preview";

const posts: BlogPost[] = (await getCollection("blog"))
  .filter((p: BlogPost) => {
    if (isVercelPreview) {
      return true;
    }

    return isProd ? !p.data.isDraft : true;
  })
  .sort(
    (a: BlogPost, b: BlogPost) =>
      b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
  );
---

<ul
  class="ml-0 pl-0 list-none prose-h3:mt-2 prose-p:leading-normal prose-p:pt-1 prose-p:mt-0 md:prose-p:mt-1 prose-a:no-underline hover:prose-a:underline"
>
  {
    posts.map((post) => (
      <li class="pb-1">
        <a href={`/blog/${post.id}/`}>
          {/* <img
            width={720}
            height={360}
            src={post.data.heroImage}
            alt=""
          /> */}
          <h3>
            {post.data.isDraft && "[DRAFT] "}
            {post.data.title}
          </h3>
        </a>
        <p class="">{post.data.description}</p>
        <p class="text-sm flex items-center gap-1">
          <Icon icon={APP_ICONS["calendar"]} size={18} />
          <FormattedDate date={post.data.pubDate} />
          {post.data.seriesInfo && (
            <>
              <BulletDivider />
              {post.data.seriesInfo[0]} Series
            </>
          )}
        </p>
      </li>
    ))
  }
</ul>
