---
import { Image } from "astro:assets";
import { type CollectionEntry, getCollection, render } from "astro:content";
import CalloutBox from "~/components/CalloutBox.astro";
import Giphy from "~/components/Giphy.astro";
import NextPreviousPosts from "~/components/NextPreviousPosts.astro";
import PostInfo from "~/components/PostInfo.astro";
import Typography from "~/components/Typography.astro";
import BaseLayout from "~/layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const posts: CollectionEntry<"blog">[] = await getCollection("blog");

  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}

type Props = CollectionEntry<"blog">;

const posts: CollectionEntry<"blog">[] = await getCollection("blog");
const post = Astro.props;

const { Content, headings } = await render(post);
const { title, heroImage, heroImageCredit, description, toc, pubDate } =
  post.data;
---

<BaseLayout title={title} description={description}>
  <Typography twStyles="prose-img:my-1">
    <h1 class="title">{title}</h1>
    {
      Array.isArray(heroImage) && heroImage.length === 2 && (
        <Image src={heroImage[0]} alt={heroImage[1]} priority />
      )
    }
    <PostInfo pubDate={pubDate} heroImageCredit={heroImageCredit} />
    {
      toc && (
        <ul class="prose mx-auto">
          {headings.map((h) => (
            <li>
              <a href={`#${h.slug}`}>{h.text}</a>
            </li>
          ))}
        </ul>
      )
    }
    <Content components={{ CalloutBox, Giphy, Image }} />
    <NextPreviousPosts allPosts={posts} currentPost={post} />
  </Typography>
</BaseLayout>
