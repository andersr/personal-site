---
import { getCollection } from "astro:content";
import type { BlogPost } from "~/types/BlogPost";
import FormattedDate from "./FormattedDate.astro";

const isProd = import.meta.env.PROD;

const posts: BlogPost[] = (await getCollection("blog"))
  .filter((p: BlogPost) => (isProd ? !p.data.isDraft : true))
  .sort(
    (a: BlogPost, b: BlogPost) =>
      b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
  );
---

<ul class="ml-0 pl-0 list-none">
  {
    posts.map((post) => (
      <li class="pb-1">
        <a href={`/blog/${post.id}/`}>
          {/* <img
            width={720}
            height={360}
            src={post.data.heroImage}
            alt=""
          /> */}
          <h3 class="title">
            {post.data.isDraft && "[DRAFT] "}
            {post.data.title}
          </h3>
        </a>
        <p>{post.data.description}</p>
        <p class="italic text-sm">
          <FormattedDate date={post.data.pubDate} />
        </p>
      </li>
    ))
  }
</ul>
